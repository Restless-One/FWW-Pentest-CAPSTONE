from database.database import add_scan, add_vulnerability


class DatabaseTest:
    """class to test database functions"""

    @staticmethod
    def test_add_scan(data):
        timestamp = data.get('timestamp')
        target_ip = data.get('target_ip')
        result_summary = data.get('result_summary')
        status = data.get('status')

        if not all([timestamp, target_ip, result_summary, status]):
            return {'message': 'Missing data'}, 400

        new_scan = add_scan(timestamp, target_ip, result_summary, status)

        return {
            'id': new_scan.id,
            'timestamp': new_scan.timestamp,
            'target_ip': new_scan.target_ip,
            'result_summary': new_scan.result_summary,
            'status': new_scan.status
        }, 201

    @staticmethod
    def test_add_vulnerability(data):
        scan_id = data.get('scan_id')
        description = data.get('description')
        severity = data.get('severity')
        mitigation = data.get('mitigation')

        if not all([scan_id, description, severity]):
            return {'message': 'Missing data'}, 400

        new_vulnerability = add_vulnerability(scan_id, description, severity, mitigation)

        return {
            'id': new_vulnerability.id,
            'description': new_vulnerability.description,
            'severity': new_vulnerability.severity,
            'mitigation': new_vulnerability.mitigation
        }, 201