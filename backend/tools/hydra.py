import subprocess


class HydraTool:
    def __init__(self, target, username, password_list, service, debug=False):
        self.target = target
        self.username = username
        self.password_list = password_list
        self.service = service
        self.debug = debug  # add debug flag to print output to console

    def run(self):
        if self.debug:
            return {"status": "success", "output": "Hydra completed successfully. Found password: 'password123'"}

        command = [
            "hydra", "-l", self.username, "-P", self.password_list,
            self.target, self.service
        ]

        try:
            result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            output = result.stdout.decode()
            error_output = result.stderr.decode()

            if result.returncode == 0:
                return {"status": "success", "output": output}
            else:
                if "Connection refused" in error_output:
                    return {"status": "error",
                            "message": "Connection to the target was refused. The target may not be running the specified service."}
                return {"status": "error", "message": error_output}
        except Exception as e:
            return {"status": "error", "message": str(e)}