from gvm.connections import connection
from gvm.protocols.gmp import Gmp
from gvm.transforms import EtreeTransform
class OpenVas:
    def __init__(self, host, username, password):
        self.host = host
        self.username = username
        self.password = password
        self.connection = None
        self.gmp = None
    def connect(self):
        self.connection = ConnectionManager(host=self.host)
        self.gmp = Gmp(self.connection)
        self.gmp.authenticate(username=self.username, password=self.password)
    def create_target(self,target_name,target_host):
        reponse = self.gmp.create_target(target_name,target_host)
        return reponse
    def start_scan(self,target_id,config_id):
        task_id = self.gmp.create_task(name="OpenVAS Scan",config_id=config_id,target_id=target_id)['id']
        self.gmp.start_task(task_id=task_id)
        return task_id
    def get_report(self,task_id):
        report_id = self.gmp.get_task(task_id=task_id)['task']['last_report']['report']['id']
        report = self.gmp.get_report(report_id=report_id, report_format_id='a3810a62-1f62-11e1-9219-406186ea4fc5')
        return report
    def close(self):
        if self.gmp:
            self.gmp.quit()
        if self.connection:
            self.connection.close()