from flask import Flask, jsonify
from database import db
from routes import route_bp
from database.database import add_scan, add_vulnerability, Vulnerability
from datetime import datetime
from sqlalchemy import inspect

app = Flask(__name__)

app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///pentest.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db.init_app(app)

# Ensure the blueprint is registered here
app.register_blueprint(route_bp)

# Add a test route
@app.route('/test')
def test():
    return "This is a test route"

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
        
        inspector = inspect(db.engine)
        tables = inspector.get_table_names()
        print("Created tables:", tables)
        
        try:
            result = db.session.execute(db.select(Vulnerability)).fetchall()
            print("Successfully queried Vulnerability table")
        except Exception as e:
            print(f"Error querying Vulnerability table: {str(e)}")
        
        print("Registered routes:")
        for rule in app.url_map.iter_rules():
            print(f"{rule.endpoint}: {rule.rule}")
    
    app.run(debug=True)