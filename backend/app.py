
from flask import Flask, jsonify
from database import db
from routes import route_bp
from database.database import add_scan, add_vulnerability
from datetime import datetime
from sqlalchemy import inspect

app = Flask(__name__)

app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///pentest.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db.init_app(app)

app.register_blueprint(route_bp)

if __name__ == '__main__':
    with app.app_context():

        # create tables if they don't exist already
        db.create_all()
        
        inspector = inspect(db.engine)
        tables = inspector.get_table_names()
        print("Tables created:", tables)
        
        # add test data
        # scan1 = add_scan("192.168.1.1", "High-risk vulnerability found", "Completed", datetime.now())
        # scan2 = add_scan("10.0.0.1", "No vulnerabilities found", "Completed", datetime.now())
        
        # add_vulnerability(scan1.id, "SQL Injection Vulnerability", "High", "Update database query methods")
        # add_vulnerability(scan1.id, "Cross-Site Scripting (XSS) Attack", "Medium", "Implement input validation")
        
        # print("Testing data added")

    app.run(debug=True)