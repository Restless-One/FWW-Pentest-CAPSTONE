from flask import jsonify, request, send_file
from database.database import get_all_scans, get_all_vulnerabilities, Scan, Vulnerability
from db_test.db_test import DatabaseTest
from . import route_bp
from report.report import generate_report
import os

# main page
@route_bp.route('/')
def index():
    return "Welcome to the Dashboard"

# scan page
@route_bp.route('/scan', methods=['GET'])
def get_scans():
    scans = Scan.query.all()
    result = []
    for scan in scans:
        result.append({
            'id': scan.id,
            'timestamp': scan.timestamp,
            'target_ip': scan.target_ip,
            'result_summary': scan.result_summary,
            'status': scan.status
        })
    return jsonify(result), 200

# vulnerability page
@route_bp.route('/vulnerabilities', methods=['GET'])
def get_vulnerabilities():
    vulnerabilities = get_all_vulnerabilities()
    result = []
    for vuln in vulnerabilities:
        result.append({
            'id': vuln.id,
            'scan_id': vuln.scan_id,
            'description': vuln.description,
            'severity': vuln.severity,
            'mitigation': vuln.mitigation
        })
    return jsonify(result), 200

# scan test page
@route_bp.route('/test_add_scan', methods=['POST'])
def test_add_scan():
    data = request.get_json()
    result, status_code = DatabaseTest.test_add_scan(data)
    return jsonify(result), status_code

# vulnerability test page
@route_bp.route('/test_add_vulnerability', methods=['POST'])
def test_add_vulnerability():
    data = request.get_json()
    result, status_code = DatabaseTest.test_add_vulnerability(data)
    return jsonify(result), status_code

# generate report page
@route_bp.route('/generate_report/<int:scan_id>', methods=['GET'])
def create_report(scan_id):

        report_filename = generate_report(scan_id, f"report_{scan_id}.pdf")
        return jsonify({"message": "Report generated successfully.", "filename": report_filename}), 200

# add report page
@route_bp.route('/report/<int:scan_id>', methods=['GET'])
def get_report(scan_id):

        report_filename = f"report_{scan_id}.pdf"
        report_path = os.path.join(os.getcwd(), report_filename)
        
        # if report not exist, generate it first
        if not os.path.exists(report_path):
            generate_report(scan_id, report_filename)
        
        # send report file
        return send_file(report_path, as_attachment=True)